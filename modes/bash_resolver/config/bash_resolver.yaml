#config_version=5

# The bash resolver is a constantly running mode that encapsulates the logic needed to convert directional bash target hits to MPF sequence shots.

mode:
  start_events: ball_starting
  priority: 100

# Comment out if not testing
shows:
  bash_direction_pulse:
    - duration: 100ms
      lights:
        (a): blue
    - duration: 100ms
      lights:
        (a): off
    - duration: 100ms
      lights:
        (a): blue
    - duration: 100ms
      lights:
        (a): off
    - duration: 100ms
      lights:
        (a): blue
    - duration: -1
      lights:
        (a): off

show_player:
  bash_resolver_left_hit:
    bash_direction_pulse:
      show_tokens:
        a:   l_serial_chain_0_13
  bash_resolver_diagonal_left_hit:
    bash_direction_pulse:
      show_tokens:
        a:   l_serial_chain_0_14
  bash_resolver_center_hit:
    bash_direction_pulse:
      show_tokens:
        a:   l_serial_chain_0_15
  bash_resolver_diagonal_right_hit:
    bash_direction_pulse:
      show_tokens:
        a:   l_serial_chain_0_16
  bash_resolver_right_hit:
    bash_direction_pulse:
      show_tokens:
        a:   l_serial_chain_0_17

# sequence_shots:
#   seq_bash_center:
#     event_sequence: bash_resolver_center_hit, bash_resolver_debounce_started
#     sequence_timeout: 100ms
#   seq_bash_left:
#     event_sequence: bash_resolver_left_hit, bash_resolver_debounce_started
#     sequence_timeout: 100ms
#   seq_bash_right:
#     event_sequence: bash_resolver_right_hit, bash_resolver_debounce_started
#     sequence_timeout: 100ms
#   seq_bash_diagonal_left:
#     event_sequence: bash_resolver_diagonal_left_hit, bash_resolver_debounce_started
#     sequence_timeout: 100ms
#   seq_bash_diagonal_right:
#     event_sequence: bash_resolver_diagonal_right_hit, bash_resolver_debounce_started
#     sequence_timeout: 100ms

# this state machine is used to find the direction the bash mech was hit
state_machines:
  bash_resolver:
    states:
      start:
        label: standard starting state
        events_when_started: bash_resolver_started
        events_when_stopped: bash_resolver_first_hit_received
      first_hit_forward: {}
      first_hit_left: {}
      first_hit_right: {}
      debounce:
        events_when_started: bash_resolver_debounce_started
    transitions:
      # start
      - source: start
        target: first_hit_forward
        events: s_bash_forward_active
      - source: start
        target: first_hit_left
        events: s_bash_right_active
      - source: start
        target: first_hit_right
        events: s_bash_left_active
      # transitions from forward
      - source: first_hit_forward
        target: debounce
        events: timer_bash_hit_timeout_complete
        events_when_transitioning: bash_resolver_center_hit
      - source: first_hit_forward
        target: debounce
        events: s_bash_left_active
        events_when_transitioning: bash_resolver_diagonal_right_hit
      - source: first_hit_forward
        target: debounce
        events: s_bash_right_active
        events_when_transitioning: bash_resolver_diagonal_left_hit
      # transitions from left
      - source: first_hit_left
        target: debounce
        events: timer_bash_hit_timeout_complete
        events_when_transitioning: bash_resolver_left_hit
      - source: first_hit_left
        target: debounce
        events: s_bash_forward_active
        events_when_transitioning: bash_resolver_diagonal_left_hit
      # transitions from right
      - source: first_hit_right
        target: debounce
        events: timer_bash_hit_timeout_complete
        events_when_transitioning: bash_resolver_right_hit
      - source: first_hit_right
        target: debounce
        events: s_bash_forward_active
        events_when_transitioning: bash_resolver_diagonal_right_hit
      # debounce
      - source: debounce
        target: start
        events: timer_bash_resolver_debounce_complete

timers:
  # my bash target likes to ricochet so hard it might fires another switch
  # using this timer to add a debounce so that errant switches won't effect a detected hit
  bash_resolver_debounce:
    tick_interval: 100ms
    end_value: 2
    control_events:
      - action: start
        event: bash_resolver_debounce_started
      - action: reset
        event: timer_bash_resolver_debounce_complete
  bash_hit_timeout:
    end_value: 1
    tick_interval: 100ms
    control_events:
      - action: start
        event: bash_resolver_first_hit_received
      - action: reset
        event: timer_bash_hit_timeout_complete
